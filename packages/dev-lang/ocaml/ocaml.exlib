# Distributed under the terms of the GNU General Public License v2
# Copyright 2012-2013 Nicolas Braud-Santoni   <nicolas+exherbo@braud-santoni.eu>
# Copyright 2009      A Frederick Christensen <fauxmight@nosocomia.com>
# Copyright 2008      Saleem Abdulrasool      <compnerd@compnerd.org>
require flag-o-matic

SUMMARY="A general-purpose programming language, designed for safety and reliability."
DESCRIPTION="
The OCaml system is the main implementation of the OCaml language.
It features a powerful module system and a full-fledged object-oriented layer.

It comes with a native-code compiler that supports numerous architectures, for
high performance; a bytecode compiler, for increased portability;
and an interactive loop, for experimentation and rapid development.
"
HOMEPAGE="
http://caml.inria.fr/ocaml/index.en.html [[ description = [ Official homepage at Inria ] ]]
http://ocaml.org/                        [[ description = [ Community-driven website   ] ]]
"
LICENCES="|| ( LGPL-2 QPL-1.0 )"

MY_PNV=${PN}-$(ever replace 3 +)
DOWNLOADS="http://caml.inria.fr/pub/distrib/${PN}-$(ever range 1-2)/${MY_PNV}.tar.gz"
WORK="${WORKBASE}"/${MY_PNV}

BUGS_TO="fauxmight@nosocomia.com nicolas+exherbo@braud-santoni.eu"

UPSTREAM_DOCUMENTATION="http://caml.inria.fr/resources/doc/index.en.html"

MYOPTIONS="
    doc      [[ description = [ Install OCaml's manpages ] ]]
    ncurses
"

DEPENDENCIES="
    build:
      app-arch/xz

    build+run:
        ncurses? ( sys-libs/ncurses )
"

export_exlib_phases src_configure src_compile src_install

ocaml_src_configure() {
    # ocamlopt uses -pg. -pg and -fomit-frame-pointer conflict
    filter-flags -fomit-frame-pointer

    RAW_LDFLAGS=$(raw-ldflags) edo ./configure                  \
        $(option ncurses || echo "-no-curses")                  \
        -cc ${CC}                                               \
        -partialld "${LD} -r"                                   \
        --host $(exhost --build)                                \
        --target $(exhost --target)                             \
        --prefix /usr                                           \
        --bindir /usr/$(exhost --target)/bin                    \
        --libdir /usr/$(exhost --target)/lib/ocaml              \
        --mandir /usr/share/man
}


ocaml_src_compile() {
    # parallel builds are broken so often, its not even worth trying anymore
    emake AR=${AR} world.opt
}

ocaml_src_install() {
    emake BINDIR="${IMAGE}/usr/$(exhost --target)/bin"       \
          LIBDIR="${IMAGE}/usr/$(exhost --target)/lib/ocaml" \
          MANDIR="${IMAGE}/usr/share/man" install

    # Remove man directory if needed
    option !doc && edo rm -rf "${IMAGE}"/usr/share/man/man3

    # compiler libraries
    dodir /usr/$(exhost --target)/lib/ocaml/compiler-libs
    insinto /usr/$(exhost --target)/lib/ocaml/compiler-libs
    doins "${WORK}"/{utils,typing,parsing}/*.{mli,cmi,cmo,cmx,o}

    # headers
    dodir /usr/$(exhost --target)/include
    dosym /usr/$(exhost --target)/lib/ocaml/caml /usr/$(exhost --target)/include

    emagicdocs
}

