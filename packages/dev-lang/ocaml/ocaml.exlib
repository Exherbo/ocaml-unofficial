# Distributed under the terms of the GNU General Public License v2
# Copyright 2012-2013 Nicolas Braud-Santoni   <nicolas+exherbo@braud-santoni.eu>
# Copyright 2009      A Frederick Christensen <fauxmight@nosocomia.com>
# Copyright 2008      Saleem Abdulrasool      <compnerd@compnerd.org>

export_exlib_phases src_prepare src_compile src_install

SUMMARY="A general-purpose programming language, designed for safety and reliability."
DESCRIPTION="
The OCaml system is the main implementation of the OCaml language.
It features a powerful module system and a full-fledged object-oriented layer.

It comes with a native-code compiler that supports numerous architectures, for
high performance; a bytecode compiler, for increased portability;
and an interactive loop, for experimentation and rapid development.
"
HOMEPAGE="
https://caml.inria.fr/ocaml/index.en.html [[ description = [ Official homepage at Inria ] ]]
https://ocaml.org/                        [[ description = [ Community-driven website   ] ]]
"
LICENCES="|| ( LGPL-2 QPL-1.0 )"

MY_PNV=${PN}-$(ever replace 3 +)
DOWNLOADS="https://caml.inria.fr/pub/distrib/${PN}-$(ever range 1-2)/${MY_PNV}.tar.xz"
WORK="${WORKBASE}"/${MY_PNV}

UPSTREAM_DOCUMENTATION="https://caml.inria.fr/resources/doc/index.en.html"

MYOPTIONS="
    doc      [[ description = [ Install OCaml's manpages ] ]]
    spacetime [[ description = [ Build the spacetime memory profiler ] ]]
"

DEPENDENCIES="
    build+run:
        spacetime? ( dev-libs/libunwind )
"

DEFAULT_SRC_CONFIGURE_PARAMS+=(
    --libdir=/usr/$(exhost --target)/lib/ocaml
    # We should probably not pass this, but it's needed for dev-games/weidu
    --disable-force-safe-string
    --enable-flambda
)
DEFAULT_SRC_CONFIGURE_OPTION_ENABLES+=(
    spacetime
)

ocaml_src_prepare() {
    default

    edo sed -e 's|\(^MKDLL=.*\)|\1 $(LDFLAGS)|' \
        -e 's|\(^OC_CFLAGS=.*\)|\1 $(LDFLAGS)|' \
        -e 's|\(^OC_LDFLAGS=.*\)|\1 $(LDFLAGS)|' \
        -i Makefile.config.in
}

ocaml_src_compile() {
    emake AR=${AR} world.opt
}

ocaml_src_install() {
    default

    # Remove man directory if needed
    option !doc && edo rm -rf "${IMAGE}"/usr/share/man/man3

    # compiler libraries
    dodir /usr/$(exhost --target)/lib/ocaml/compiler-libs
    insinto /usr/$(exhost --target)/lib/ocaml/compiler-libs
    doins "${WORK}"/{utils,typing,parsing}/*.{mli,cmi,cmo,cmx,o}

    # headers
    dodir /usr/$(exhost --target)/include
    dosym /usr/$(exhost --target)/lib/ocaml/caml /usr/$(exhost --target)/include

    emagicdocs
}

